name: Appointment Service CI/CD

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'src/AppointmentService/**'
      - '.github/workflows/ci-cd.appointment.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/AppointmentService/**'
      - '.github/workflows/ci-cd.appointment.yml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Create .NET tool manifest
      run: dotnet new tool-manifest
      working-directory: src/AppointmentService

    - name: Install Swashbuckle CLI
      run: dotnet tool install Swashbuckle.AspNetCore.Cli --version 9.0.1
      working-directory: src/AppointmentService

    - name: Restore dependencies
      run: dotnet restore src/AppointmentService/appointment.api/appointment.api.csproj

    - name: Build
      run: dotnet build src/AppointmentService/appointment.api/appointment.api.csproj --no-restore -c Release

    - name: Publish
      run: dotnet publish src/AppointmentService/appointment.api/appointment.api.csproj -c Release -o ./publish --no-build

    - name: Generate Swagger
      run: dotnet tool run dotnet-swagger tofile --output ./publish/swagger.json ./publish/appointment.api.dll v1
      working-directory: src/AppointmentService

    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Upload Swagger to Blob Storage
      run: |
        az storage blob upload \
          --account-name healthcarergb9d7 \
          --container-name swagger-artifacts \
          --name appointment/v1/swagger.json \
          --file ./publish/swagger.json \
          --auth-mode login

    - name: Login to Azure Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.ACR_REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: src/AppointmentService/appointment.api/Dockerfile
        push: true
        tags: |
          ${{ secrets.ACR_REGISTRY }}/appointment-service:${{ github.sha }}
          ${{ secrets.ACR_REGISTRY }}/appointment-service:latest
        platforms: linux/amd64

    - name: Ensure Container Apps Environment Exists
      run: |
        az containerapp env show --name healthcare-ca-env --resource-group healthcare-rg || \
        az containerapp env create \
          --name healthcare-ca-env \
          --resource-group healthcare-rg \
          --location eastus \
          --logs-destination none

    - name: Deploy to Azure Container App
      run: |
        az containerapp create \
          --name appointment-service \
          --resource-group healthcare-rg \
          --environment healthcare-ca-env \
          --image ${{ secrets.ACR_REGISTRY }}/appointment-service:${{ github.sha }} \
          --target-port 8080 \
          --ingress external \
          --registry-server ${{ secrets.ACR_REGISTRY }} \
          --registry-username ${{ secrets.ACR_USERNAME }} \
          --registry-password ${{ secrets.ACR_PASSWORD }} \
          --user-assigned healthcare-identity \
          --cpu 0.5 \
          --memory 1.0Gi \
          --min-replicas 1 \
          --max-replicas 3 \
          --env-vars \
             "ASPNETCORE_ENVIRONMENT=Development" \
             "KeyVault__VaultUri=https://healthcare-vault.vault.azure.net/" \
             "AZURE_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}"

  update-apim:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - name: Update APIM Swagger
        uses: ./.github/workflows/apim.yml
        with:
          serviceName: appointment
          apiVersion: v1
          swaggerBlobPath: swagger-artifacts/appointment/v1/swagger.json
          storageAccountName: healthcarergb9d7
          apimResourceGroup: healthcare-rg
          apimServiceName: healthcare-apim
          azureCredentials: ${{ secrets.AZURE_CREDENTIALS }}